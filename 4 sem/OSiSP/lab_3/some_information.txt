Как и в предыдущей запускать только "parent". Бонусом - немного теории:

Синхронизация процессов с помощью сигналов является одним из способов взаимодействия между процессами в операционной системе. Процесс может отправлять сигналы другим процессам, а также принимать и обрабатывать сигналы, которые ему были отправлены.

Разделяемая память в Linux - это механизм, который позволяет нескольким процессам обмениваться данными через общий сегмент памяти. Этот механизм может быть использован для ускорения работы программ, которые должны часто обмениваться данными, или для обмена данными между разными процессами.

1. SIGUSR1 и SIGUSR2 - пользовательские сигналы, которые можно использовать для передачи информации между процессами.

2. SIGTERM - сигнал, который отправляется процессу для запроса его завершения.

3. SIGKILL - сигнал, который отправляется процессу для его немедленного завершения.

4. SIGSTOP и SIGTSTP - сигналы, которые используются для временной остановки процесса.

5. SIGCONT - сигнал, который используется для возобновления выполнения процесса после его остановки с помощью SIGSTOP или SIGTSTP.

6. SIGCHLD - сигнал, который отправляется родительскому процессу при завершении дочернего процесса.

7. SIGALRM - сигнал, который используется для установки таймера и отправки сигнала по истечении указанного времени.

8. SIGIGN - сигнал, который используется для игнорирования указанного сигнала.

9. SIGINT - это сигнал, который обычно отправляется процессу при нажатии пользователем клавиш Ctrl+C.

10. SIGSEGV - это сигнал, который возникает при попытке доступа к памяти, которая не была выделена для процесса или к которой нет прав доступа. 

Родительский процесс может отправлять сигнал SIGUSR1 одному дочернему процессу, а сигнал SIGUSR2 другому дочернему процессу. Каждый дочерний процесс должен иметь свой обработчик сигналов SIGUSR1 и SIGUSR2, который будет выполнять определенные действия при получении соответствующего сигнала. 

SIGTERM позволяет процессу выполнить некоторые действия перед завершением, а SIGKILL приводит к немедленному завершению процесса без возможности его перехвата. Поэтому SIGTERM является более мягким способом завершения процесса, а SIGKILL - более жестким.

SIGSTOP - это сигнал, который отправляется процессу для немедленной остановки его выполнения. 

SIGCONT может использоваться для управления процессами, которые были временно остановлены, например, для выполнения других задач или для уменьшения нагрузки на систему.

SIGCHLD - это сигнал, который отправляется родительскому процессу при завершении дочернего процесса.

SIGALRM - это сигнал, который используется для установки таймера и отправки сигнала по истечении указанного времени.

Функция signal() имеет ограничения в блокировке сигнала во время выполнения обработчика и неопределенное поведение при повторном вызове для одного и того же сигнала. Функция sigaction() позволяет задать дополнительные параметры для обработки сигналов, такие как блокировка других сигналов во время выполнения обработчика или использование флага SA_RESTART для автоматического возобновления системных вызовов после обработки сигнала. 

Функция fputc() используется для записи одного символа в поток данных. Она принимает два аргумента: символ, который нужно записать, и указатель на поток данных, в который нужно записать символ.

Атомарность - это свойство операции, которое означает, что она выполнится целиком и неделима, то есть не может быть прервана или изменена в процессе выполнения другой операцией. (запись на диск, инкремент переменной, чтение и запись переменной)

Сигнал в Linux - это асинхронное уведомление о произошедшем событии

Дефолтный обработчик SIGUSR1 и SIGUSR2 - это игнорирование сигнала. То есть, если процесс получает один из этих сигналов и не определил свой собственный обработчик, то он просто проигнорирует сигнал и продолжит свою работу.

пользовательские сигналы для синхронизации и управления процессами

